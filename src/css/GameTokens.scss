/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * testlav implementation : © Alena Laskavaia <laskava@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * GameTokens.scss
 *
 */

.location {
  position: relative;

}

.hand_area .location {
  background-color: #ffffff99;
  border-radius: 1vh;
  padding: 10px 10px 10px calc(var(--card-width)*0.2);
}

#display_main {
  background-color: unset;
}

.handy {
  min-height: var(--card-height);
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  position: relative;
}

.draw,
.draft {
  min-height: unset;
}

.handy::after {
  content: attr(data-name);
  position: absolute;
  top: 0.7em;
  left: 0;
  font-size: calc(var(--card-width)*0.2);
  font-family: var(--mars-font);
  color: rgba(0, 0, 0, 0.34);
  transform: rotate(-90deg) translateX(-30px) translateY(-8px);
  transform-origin: .5em center 0;
  margin-right: -140px;
  overflow-wrap: break-word;
  height: calc(var(--card-width) * 0.2);
}

.mcompact {
  .handy::after {
    top:revert;
    bottom:1.3em;
  }
}

.draw:empty,
.draft:empty {
  display: none;
}

.draw:empty:after,
.draft:empty:after {
  display: none;
}

.location>* {
  display: inline-block;
  position: relative;
}

.location>.counter {
  position: absolute;
  top: 0;
  left: 0;
}

.spectatorMode .hand {
  display: none;
}

.carddeck>.counter {
  position: absolute;
  top: 90%;
  left: calc(50% - 0.5em);
}

.active_slot {
  cursor: pointer;
  box-shadow: 0px 0px 4px 2px #64b4ff !important;
}

.active_slot.card, .active_slot.corp_logo {
  box-shadow: 2px 2px 3px 3px #00000080, 2px -2px 0px 5px #ff9800 !important;
  transform: translateZ(10px); // make it hover a bit
  top: 0px;
  left: 0px;
}

.active_slot.mr_selected.card {
  box-shadow: 2px 2px 3px 3px rgba(0, 0, 0, 0.5019607843), 2px -2px 0px 5px #3F51B5 !important;
  top: -20px;
}

.active_slot.card:hover {
  cursor: pointer;
  box-shadow: unset;
  outline: 3px solid blue;
}

.marker {
  background-image: url('img/cubes_opaque.png');
  background-size: 600% 100%;
  width: calc(var(--map-width) * 0.045);
  height: calc(var(--map-width) * 0.05);
}

#ebd-body[data-localsetting_colorblind="colorblind"] {
  .marker {
    background-image: url('img/cubes_cb.png');
  }
}

#main_board .marker {
  position: absolute;
}

.hex > .marker {
  left: 28%;
  top: 24%;
}

.player_area .marker {
  position: absolute;
  width: calc(var(--card-width) * 0.045 * 3.5 );
  height: calc(var(--card-width) * 0.05 * 3.5 );
}

.hex > .marker {
  left: 28%;
  top: 24%;
}



.marker_0000ff {background-position-x:-100%; }
.marker_ff0000 {background-position-x:0; }
.marker_008000 {background-position-x:-200%; }
.marker_ffa500 {background-position-x:-300%; }
.marker_773300 {background-position-x:-400%; }
.marker_ffffff {background-position-x:-500%; }

$colors-list: (
        _0000ff: #0000ff,
        _ff0000: #ff0000,
        _008000: #008000,
        _ffa500: #ffa500,
        _773300: #333333, // suppose to be more blackish
        _ffffff: #ffffff
);
// color blind pallette
$colors-list-cb: (
        _0000ff: #0072B2, // blue
        _ff0000: #CC79A7, // reddish purple
        _008000: #009E73, // bluish green
        _ffa500: #E69F00, // orange
        _773300: #333333, // suppose to be more blackish
        _ffffff: #ffffff
);


@each $key, $val in $colors-list {
  .color#{$key} {
    color: #{$val};
  }

  .plcolor#{$key} {
    --plcolor: #{$val};
  }

  :root {
    --color-mapping#{$key}: #{$val};
  }
}

#ebd-body[data-localsetting_colorblind="colorblind"] {
  @each $key, $val in $colors-list-cb {
    --color-mapping#{$key}: #{$val};
    
    .color#{$key} {
      color: #{$val};
    }
  
    .plcolor#{$key} {
      --plcolor: #{$val};
    }

  }
}